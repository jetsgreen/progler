{"version":3,"sources":["components/Cards/Cards.js","api/index.js","components/Chart/Charts.js","components/CountryPicker/CountryPicker.js","components/Navbar/Navbar.js","components/Jumbotron/Jumbotron.js","App.js","index.js"],"names":["Cards","data","confirmed","recovered","deaths","lastUpdate","className","Grid","container","spacing","justify","xs","md","item","component","Card","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changebleUrl","axios","get","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Charts","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","NativeSelect","defaultValue","onChange","e","target","i","key","ButtonAppBar","AppBar","position","Toolbar","href","style","textDecoration","FixedContainer","Fragment","CssBaseline","Container","fixed","rel","Button","App","state","fetchedData","setState","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bcde51b2.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\r\nimport Countup from 'react-countup';\r\n\r\nimport './Cards.css';\r\n\r\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\r\n    if (!confirmed) {\r\n        return 'Loading....'\r\n    }\r\n    return (\r\n        <div className=\"container\" >\r\n            <Grid container spacing={3} justify=\"center\">\r\n                <Grid className=\"card\" xs={12} md={3} item component={Card} >\r\n                    <CardContent className=\"infected\">\r\n                        <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <Countup start={0} end={confirmed.value} duration={2.5} separator=\",\" />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of Active Cases of Covid-19</Typography>\r\n\r\n                    </CardContent>\r\n\r\n                </Grid>\r\n                <Grid className=\"card\" xs={12} md={3} item component={Card}>\r\n                    <CardContent className=\"recovered\" >\r\n                        <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <Countup start={0} end={recovered.value} duration={2.5} separator=\",\" />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of Recoveries From Covid-19</Typography>\r\n\r\n                    </CardContent>\r\n\r\n                </Grid>\r\n                <Grid className=\"card\" xs={12} md={3} item component={Card}>\r\n                    <CardContent className=\"deaths\" >\r\n                        <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <Countup start={0} end={deaths.value} duration={2.5} separator=\",\" />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of Deaths Caused by Covid-19</Typography>\r\n\r\n                    </CardContent>\r\n\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards","import axios from 'axios'\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\n// async deals with promises the same that .then works, but it's easier to read\r\n// this function is in charge of pulling the data for the global and passing individual data to each country\r\nexport const fetchData = async (country) => {\r\n    let changebleUrl = url;\r\n    if(country){\r\n        changebleUrl =`${url}/countries/${country}`\r\n    }\r\n\r\n    try {\r\n        const {data: { confirmed, recovered, deaths, lastUpdate }} = await axios.get(changebleUrl);\r\n       \r\n        return { confirmed, recovered, deaths, lastUpdate};\r\n    } catch (error){\r\n        console.log(error)\r\n    }\r\n}\r\n// this function is in charge of pulling daily data\r\nexport const fetchDailyData = async () => {\r\n    try{\r\n        const {data} = await axios.get(`${url}/daily`)\r\n       const modifiedData = data.map((dailyData)=> ({\r\n           confirmed: dailyData.confirmed.total,\r\n           deaths: dailyData.deaths.total,\r\n           date: dailyData.reportDate,\r\n       }));\r\n       return modifiedData\r\n\r\n    } catch(error){\r\n        console.log(error)\r\n    }\r\n}\r\n// this function is incharge of pulling the countries individually \r\nexport const fetchCountries = async () => {\r\n    try{\r\n        const {data: {countries}} = await axios.get(`${url}/countries`);\r\n          return countries.map((country) => country.name)\r\n        \r\n    }catch(error){\r\n        console.log(error)\r\n    }\r\n}","import React, {useState, useEffect} from 'react';\r\nimport {fetchDailyData} from '../../api';\r\nimport {Line, Bar} from 'react-chartjs-2';\r\nimport './Charts.css';\r\n\r\n\r\nconst Charts = ({data, country}) => {\r\n    const [dailyData, setDailyData] = useState([]);\r\n\r\n useEffect(()=>{\r\n     const fetchAPI = async () => {\r\n        setDailyData(await fetchDailyData());\r\n     }\r\n    \r\n     fetchAPI();\r\n },[]);\r\n\r\nconst lineChart =(\r\n    dailyData.length ?<Line data={{\r\n        labels: dailyData.map(({date}) => date),\r\n        datasets: [{\r\n            data: dailyData.map(({confirmed}) => confirmed),\r\n            label: 'Infected',\r\n            borderColor: '#3333ff',\r\n            fill: true,\r\n        }, {\r\n            data: dailyData.map(({deaths}) => deaths),\r\n            label: 'Deaths',\r\n            borderColor: 'red',\r\n            backgroundColor: \"rgba(255, 0, 0, 0.5),\",\r\n            fill: true,\r\n        }]\r\n\r\n    }}/> : null\r\n)\r\nconst barChart = (\r\n    \r\n    data.confirmed ? (\r\n        <Bar\r\n        data={\r\n            {\r\n                labels: ['Infected', 'Recovered', 'Deaths'],\r\n                datasets:[{\r\n                    label: 'People',\r\n                    backgroundColor: [\r\n                        'rgba(0, 0, 225, 0.5)',\r\n                        'rgba(0, 225, 0, 0.5)',\r\n                        'rgba(225, 0, 0, 0.5)',\r\n                    ],\r\n                    data: [data.confirmed.value, data.recovered.value, data.deaths.value]\r\n                }]\r\n            }\r\n        }\r\n        options={{\r\n            legend: { display: false },\r\n            title: { display: true, text: `Current state in ${country}`},\r\n        }}/>\r\n    \r\n        ) : null\r\n)\r\n\r\nreturn(\r\n    <div className= \"container\">\r\n        {country ? barChart : lineChart}\r\n    </div>\r\n)\r\n}\r\n\r\nexport default Charts","import React, { useEffect, useState } from 'react';\r\nimport { NativeSelect, FormControl } from \"@material-ui/core\";\r\nimport { fetchCountries } from '../../api'\r\nimport './CountryPicker.css';\r\n\r\nconst CountryPicker = ({handleCountryChange}) => {\r\n    const [fetchedCountries, setFetchedCountries] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            setFetchedCountries(await fetchCountries());\r\n        }\r\n        fetchAPI();\r\n    }, [setFetchedCountries]);\r\n\r\n    return (\r\n        <FormControl className=\"form-control\">\r\n            <NativeSelect defaultValue=\"\" onChange={(e)=> handleCountryChange(e.target.value)}>\r\n                <option value=\"global\">Global</option>\r\n                {fetchedCountries.map((country, i) => <option key={i} value={country}>{country}</option>)}\r\n            </NativeSelect>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default CountryPicker","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport './Navbar.css'\r\n\r\n\r\nexport default function ButtonAppBar() {\r\n  \r\n\r\n  return (\r\n    <div className=\"toolbar\" >\r\n      <AppBar   position=\"static\">\r\n        <Toolbar xs={3} md={12}>\r\n          \r\n          <Typography variant=\"h6\" >\r\n         <a href=\"#\" style={{color: \"white\", textDecoration: \"none\"}}>News Articles</a>\r\n          </Typography>\r\n          \r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport Button from '@material-ui/core/Button';\r\nimport './Jumbotron.css'\r\n\r\nexport default function FixedContainer() {\r\n  return (\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <Container fixed>\r\n        <Typography component=\"div\" className='div' >\r\n        <h1>CORONAVIRUS (COVID-19)</h1>\r\n            <a href=\"https://covid-19-apis.postman.com/covid-19-testing-locations/\" rel=\"noopener noreferrer\" target=\"_blank\" style={{textDecoration:'none'}}><Button className=\"btn\" variant=\"contained\" color=\"secondary\">Testing Locations</Button></a>\r\n        </Typography>\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n}","import React, { Component } from 'react';\nimport Cards from './components/Cards/Cards';\nimport Charts from './components/Chart/Charts';\nimport CountryPicker from './components/CountryPicker/CountryPicker';\nimport ButtonAppBar from './components/Navbar/Navbar';\nimport FixedContainer from './components/Jumbotron/Jumbotron';\nimport { fetchData} from './api/'\nimport './App.css';\n\n\n class App extends Component {\n   state ={\n     data:{},\n     country: ''\n   }\nasync componentDidMount() {\n  const fetchedData = await fetchData();\n  this.setState({ data: fetchedData })\n \n}\n\nhandleCountryChange = async (country) => {\n// fetch data\n const fetchedData = await fetchData(country);\n console.log(country)\n//  set the state\nconsole.log(fetchedData)\n this.setState({data: fetchedData, country: country})\n}\n\n// componentDidMount() {\n  \n//   axios.get('https://covid19.mathdro.id/api').then(response =>{\n//   this.setState({data: response.data})\n//   })\n// }\n\n\n  render() {\n    \n    return (\n      \n      \n    <div className='container'>\n      <ButtonAppBar/>\n      <FixedContainer/>\n        <Cards data={this.state.data}/>\n        <CountryPicker handleCountryChange={this.handleCountryChange}/>\n        <Charts data={this.state.data} country={this.state.country}/>\n        \n\n      </div>\n    )\n  }\n}\n\nexport default App\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}